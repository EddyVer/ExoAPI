// <auto-generated />
using System;
using ExoAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExoAPI.Migrations
{
    [DbContext(typeof(BusinessContext))]
    [Migration("20221125091929_AddEntrepotsTable")]
    partial class AddEntrepotsTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ExoAPI.Entitie.Entrepot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Entrepots");
                });

            modelBuilder.Entity("ExoAPI.Entitie.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EntrepotId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<int>("Usage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntrepotId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ExoAPI.Entitie.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("passwordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ExoAPI.Entitie.Entrepot", b =>
                {
                    b.HasOne("ExoAPI.Entitie.User", null)
                        .WithMany("Entrepots")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ExoAPI.Entitie.Product", b =>
                {
                    b.HasOne("ExoAPI.Entitie.Entrepot", null)
                        .WithMany("Products")
                        .HasForeignKey("EntrepotId");
                });

            modelBuilder.Entity("ExoAPI.Entitie.Entrepot", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ExoAPI.Entitie.User", b =>
                {
                    b.Navigation("Entrepots");
                });
#pragma warning restore 612, 618
        }
    }
}
